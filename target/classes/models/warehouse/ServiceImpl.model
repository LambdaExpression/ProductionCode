package com.model.manage.locked.service;

import java.util.ArrayList;
import java.util.List;
<#if tableVariableType.hasDateClass>
import java.util.Date;
</#if>
<#if tableVariableType.hasBigDecimalClass>
import java.math.BigDecimal;
</#if>

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.model.manage.locked.bean.${tblNameUppercase};
import com.model.manage.locked.dao.${tblNameUppercase}Dao;

/**
 * ${tblNameComment!tblName} 服务实现类
 * 
 * @Author ${user} ${date?string("yyyy年MM月dd日")}
 * 
 */
@Service
@Transactional(rollbackFor = Exception.class)
public class ${tblNameUppercase}ServiceImpl implements ${tblNameUppercase}Service {

	@Autowired
	private NamedParameterJdbcOperations mgwnpJdbc;

	@Autowired
	private ${tblNameUppercase}Dao ${tblNameLowercase}Dao;

	@Override
	public List<${tblNameUppercase}> find${tblNameUppercase}(
			${tblNameUppercase} ${tblNameLowercase}Query, Integer page, Integer pageSize) {

        <#if tableVariableType.hasCreateTime>
		String sortColumn = "createTime";
		String order = "desc";
		<#else>
		String sortColumn = null;
		String order = null;
		</#if>

		StringBuilder conditions = new StringBuilder().append("1=1 ");
		List<Object> valueList = new ArrayList<Object>();

		if (${tblNameLowercase}Query != null) {
            <#list tableVariableList as map>
            <#if map.variableLowercase == 'createTime' || map.variableLowercase == 'updateTime'>
            <#else>
			if (${tblNameLowercase}Query.get${map.variableUppercase}() != null) {
				conditions.append(" AND ${map.variableLowercase} = ? ");
				valueList.add(${tblNameLowercase}Query.get${map.variableUppercase}());
			}
			</#if>
            </#list>
		}

		if ( page != null && pageSize == null ){
		    pageSize = 10;
		}

		List<${tblNameUppercase}> lockedList = ${tblNameLowercase}Dao.selectForObjectList(
				mgwnpJdbc, ${tblNameLowercase}Query.obtainColumns(), conditions
						.toString(),
				valueList.size() == 0 ? null : valueList.toArray(), sortColumn,
				order,
				page != null && pageSize != null ? (((page - 1) * pageSize))
						: null, pageSize);

		return lockedList;
	}

    <#if tableVariableType.idType??>
	@Override
	public ${tblNameUppercase} get${tblNameUppercase}ById(${tableVariableType.idType} id) {
		if (id == null) {
			return null;
		}
		// 这里不用 selectForObject 而用 selectForObjectList ，因为前者在查询不到内容时会抛异常
		List<${tblNameUppercase}> lockedList = ${tblNameLowercase}Dao.selectForObjectList(
				mgwnpJdbc, new ${tblNameUppercase}().obtainColumns(), " id = ? ",
				new String[] { String.valueOf(id) }, null, null, null, null);
		if (lockedList == null || lockedList.size() < 1) {
			return null;
		}
		return lockedList.get(0);
	}

	@Override
	public Long add${tblNameUppercase}(${tblNameUppercase} ${tblNameLowercase}) {
		if (${tblNameLowercase} == null) {
			return null;
		}
		<#if tableVariableType.hasCreateTime>
		Date newDate = new Date();
		${tblNameLowercase}.setCreateTime(newDate);
		<#if tableVariableType.hasUpdateTime>
		${tblNameLowercase}.setUpdateTime(newDate);
		</#if>
		</#if>
		return ${tblNameLowercase}Dao.insertObject(mgwnpJdbc, ${tblNameLowercase},
				${tblNameLowercase}.obtainColumns());
	}

	@Override
	public boolean update${tblNameUppercase}ById(${tblNameUppercase} ${tblNameLowercase}) {
		if (${tblNameLowercase} == null || ${tblNameLowercase}.getId() == null) {
			return false;
		}
		<#if tableVariableType.hasUpdateTime>
		Date newDate = new Date();
		${tblNameLowercase}.setUpdateTime(newDate);
		</#if>
		StringBuilder conditions = new StringBuilder(" id =")
				.append(${tblNameLowercase}.getId());
		List<String> columnList = new ArrayList<String>();

        <#list tableVariableList as map>
        <#if map.variableLowercase == 'createTime' || map.variableLowercase == 'id'>
        <#else>
		if (${tblNameLowercase}.get${map.variableUppercase}() != null) {
			columnList.add("${map.variableLowercase}");
		}
		</#if>
        </#list>

		if (columnList.size() == 0) {
			return false;
		}
		return ${tblNameLowercase}Dao.updateObject(mgwnpJdbc, ${tblNameLowercase},
				columnList.toArray(new String[columnList.size()]),
				conditions.toString());
	}

	@Override
	public boolean delete${tblNameUppercase}ById(Long id) {
		if (id == null) {
			return false;
		}
		Integer count = ${tblNameLowercase}Dao.deleteByConditions(mgwnpJdbc,
				" id = ? ", new String[] { String.valueOf(id) });
		if (count == null || count < 1) {
			return false;
		} else if (count.equals(1)) {
			return true;
		} else {
			throw new RuntimeException(new StringBuffer("删除数量(").append(count)
					.append(")异常，现在进行数据回滚！").toString());
		}
	}
	</#if>

}
